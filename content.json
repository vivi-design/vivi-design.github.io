{"meta":{"title":"发呆的薇薇","subtitle":"","description":"","author":"Vivi","url":"http://vivi-design.github.io","root":"/"},"pages":[{"title":"404","date":"2019-12-02T08:20:45.000Z","updated":"2019-12-02T08:20:45.104Z","comments":true,"path":"404/index.html","permalink":"http://vivi-design.github.io/404/index.html","excerpt":"","text":""},{"title":"search","date":"2019-12-02T08:20:30.000Z","updated":"2019-12-02T08:20:30.822Z","comments":true,"path":"search/index.html","permalink":"http://vivi-design.github.io/search/index.html","excerpt":"","text":""}],"posts":[{"title":"移动端常用的插件","slug":"移动端常用的插件","date":"2019-12-08T08:32:24.000Z","updated":"2019-12-09T04:20:57.533Z","comments":true,"path":"2019/12/08/移动端常用的插件/","link":"","permalink":"http://vivi-design.github.io/2019/12/08/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8F%92%E4%BB%B6/","excerpt":"","text":"一：fastclick插件移动端click事件会有300ms的延时，原因是移动端屏幕双击会缩放（double tap to zoom）页面。fastclick插件专门为了处理移动端click事件300毫秒延迟，GitHub官网地址：https://github.com/ftlabs/fastclick 1.在HTML页面中添加引入fastclick.js: 注：必须在页面所有Element之前加载脚本文件先实例化fastclick 2.在JS中添加fastclick，推荐以下做法：&lt;script&gt; if (&apos;addEventListener&apos; in document) { document.addEventListener(&apos;DOMContentLoaded&apos;, function() { FastClick.attach(document.body); }, false); } &lt;/script&gt;如果你使用了JQuery，那么JS引入就可以改用下面的写法：$(function() { FastClick.attach(document.body); }); 二：Swiper插件swiper是一款功能强大的插件，可以实现很多我们意想不到的轮播效果。中文官网地址：https://www.swiper.com.cn/ 1.在使用swiper之前首先要引入插件自带的样式和行为再引用自己的js文件&lt;link rel=&quot;stylesheet&quot; href=&quot;css/swiper.min.css&quot;&gt; &lt;script src=&quot;./js/swiper.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;./js/index.js&quot;&gt;&lt;/script&gt;2. 引入swiper的布局结构，类的命名不要随意改变 因为该插件重类名不重结构&lt;div class=&quot;swiper-container&quot;&gt; &lt;div class=&quot;swiper-wrapper&quot;&gt; &lt;div class=&quot;swiper-slide&quot;&gt;&lt;img src=&quot;../img/c0.jpg&quot;/&gt;&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;&lt;img src=&quot;../img/c1.jpg&quot;/&gt;&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;&lt;img src=&quot;../img/c2.jpg&quot;/&gt;&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;&lt;img src=&quot;../img/c3.jpg&quot;/&gt;&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;&lt;img src=&quot;../img/c4.jpg&quot;/&gt;&lt;/div&gt; &lt;div class=&quot;swiper-slide&quot;&gt;&lt;img src=&quot;../img/c5.jpg&quot;/&gt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;swiper-pagination swiper-pagination-white&quot;&gt;&lt;/div&gt; &lt;div class=&quot;swiper-button-prev swiper-button-white&quot;&gt;&lt;/div&gt; &lt;div class=&quot;swiper-button-next swiper-button-white&quot;&gt;&lt;/div&gt;3.在css里添加swiper的核心css .swiper-container { width: 100%; height: 100%; } .swiper-slide { text-align: center; font-size: 18px; background: #fff; /* Center slide text vertically */ display: -webkit-box; display: -ms-flexbox; display: -webkit-flex; display: flex; -webkit-box-pack: center; -ms-flex-pack: center; -webkit-justify-content: center; justify-content: center; -webkit-box-align: center; -ms-flex-align: center; -webkit-align-items: center; align-items: center; }3.最后在自己的js文件里引入核心js即可 &lt;script&gt; var swiper = new Swiper(&apos;.swiper-container&apos;, { pagination: &apos;.swiper-pagination&apos;, nextButton: &apos;.swiper-button-next&apos;, prevButton: &apos;.swiper-button-prev&apos;, paginationClickable: true, spaceBetween: 30, centeredSlides: true, autoplay: 2500, autoplayDisableOnInteraction: false }); &lt;/script&gt; 三：SuperSlide插件SuperSlide 致力于解决网站大部分特效展示问题，使网站代码规范整洁，方便维护更新。SuperSlide官网地址：http://www.superslide2.com/ 四：iscroll插件iscroll滚动插件，常用于移动端,实现移动端页面的上拉加载和下拉刷新.IScroll是一个类，每个需要使用滚动功能的区域均要进行初始化。每个页面上的iScroll实例数目在设备的CPU和内存能承受的范围内是没有限制的。iscroll官网地址：https://github.com/cubiq/iscroll 五：移动端视频插件–zy.media.jszyMedia,是由掌阅科技开源的基于HTML5 video和audio的自定义UI多媒体播放器。支持主流移动设备移动端浏览器，适合国内移动环境。支持多种视频、音频格式，如mp4、mp3、oga、webm等。zy.media.js下载地址：https://github.com/ireaderlab/zyMedia 六：移动端常用开发框架–Bootstrap使用步骤：先引入bootstrap 样式文件 再引用jquery.min.js 最后引用bootstrap.min.js &lt;link rel=&quot;stylesheet&quot; href=&quot;./css/bootstrap.min.css&quot;&gt; &lt;script src=&quot;./js/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;./js/bootstrap.min.js&quot;&gt;&lt;/script&gt;","categories":[],"tags":[]},{"title":"API接口(DOM和BOM)","slug":"API接口","date":"2019-12-04T14:06:21.000Z","updated":"2019-12-05T15:40:21.524Z","comments":true,"path":"2019/12/04/API接口/","link":"","permalink":"http://vivi-design.github.io/2019/12/04/API%E6%8E%A5%E5%8F%A3/","excerpt":"","text":"Web API 和JS基础关联性1.JS的组成 2.JS基础以及Web API &nbsp;&nbsp;&nbsp;&nbsp; JS基础：主要是ECMAScript 标准规定的基本语法 &nbsp;&nbsp;&nbsp;&nbsp;Web API：是w3c组织的标准， 主要是DOM和BOM, 是JS所独有的部分 &nbsp;&nbsp;&nbsp;&nbsp;JS基础学习ECMAScript基础语法为后面作铺垫，Web APIs是JS的应用，通过使用JS基础语法实现页面的交互效果 &nbsp;&nbsp;&nbsp;&nbsp;MDN详细API: https://developer.mozilla.org/zh-CN/docs/Web/API 一：DOM 1. DOM简介 1.1 DOM &nbsp;&nbsp;&nbsp;&nbsp;文档对象模型（Document Object Model，简称DOM），是W3C组织推荐的处理可扩展置标语言(HTML或者XML)的标准编程接口。 1.2 DOM树 文档：一个页面就是一个文档，DOM中用document表示 元素：页面中所有标签都是元素，DOM中用element表示 节点：网页中所有内容都是节点（标签、属性、文本、注释等），DOM中用node表示 &nbsp;&nbsp;&nbsp;&nbsp;DOM把以上内容都看作是对象 2. 获取元素 2.1 获取页面中元素方法 根据ID获取 根据标签获取 通过HTML5新增的方法获取 特殊元素获取 2.2根据ID获取Element. getElementById(‘ID名’)；&nbsp;&nbsp;&nbsp;&nbsp;使用getElementById()方法可以获取带有ID的元素对象 2.3根据标签名获取Element.getElementsByTagName(‘标签名’);&nbsp;&nbsp;&nbsp;&nbsp;获取过来的是，元素对象的集合，以伪数组的形式存储的；还可以获取某个元素（父元素）内部所有指定标签名的子元素，注意：父元素必须是单个对象（必须指明是哪一个元素对象），获取的时候不包括父元素自己 2.4通过HTML5新增的方法获取document.getElementByClassName(‘类名’); //根据类名返回元素对象集合document.querySelector(‘选择器’); //根据指定选择器返回第一个元素对象document.querySelectorAll(‘选择器’); //根据指定选择器返回所有元素对象 2.5获取特殊元素（body、html）&nbsp;获取body元素对象：document.body&nbsp;获取html元素：document.documentElement 3.常见的鼠标事件执行事件的步骤：获取事件源——注册事件（绑定事件）——添加事件处理程序（采取函数赋值形式） 4.操作元素 4.1 改变元素内容element.innerText从起始位置到终止位置的内容，但它去除html标签，同时空格和换行也会去掉element.innerHTML起始位置到终止位置的全部内容，包括html标签，同时保留空客和换行 4.2 常用元素的属性操作1.innerText 、innerHTML 改变元素内容2.src 、href3.id 、alt 、title 4.3 表单元素的属性操作利用DOM可以操作这些元素的属性：type 、value 、checked 、selected 、disabled 4.4 样式属性操作通过JS修改元素的大小、颜色、位置等样式1.element.style //行内样式操作2.element.className //类名样式操作 操作元素是DOM核心内容 4.5 排他思想如果有一组元素，需要某一个元素实现某种样式，就需要用到循环的排他思想算法： 4.6 自定义属性的操作1.获取属性值element.属性 //获取内置属性值（元素本身自带的属性）element.getAttribute(‘属性’); //主要获得自定义的属性（标准） 自己定义的属性 5.节点操作5.1 节点至少拥有nodeType(节点类型)、nodeName（节点名称）和nodeValue（节点值）5.2 节点层级：常见的是父子兄层级关系 1.父级节点 node.parentNode //返回最近的一个父节点（没有则返回null） 2.子节点 2.1 parentNode.childNodes(标准)返回包含指定节点的子节点集合，返回值里面包含了所有的子节点，包括元素节点，文本节点 2.2 parentNode.children(非标准)是一个只读属性，返回所有的子元素节点，它只返回子元素节点，其余节点不返回（常用，重点掌握） 2.3 parentNode.firstChild 返回第一个子节点，找不到则返回null 同样，包含所有的节点 2.4 parentNode.lastChild 返回最后一个子节点，找不到则返回null 同样，包含所有的节点 2.5 parentNode.firstElementChild 返回第一个子元素节点，找不到则返回null 2.6 parentNode.lastElementChild 返回最后一个子元素节点，找不到则返回null这两个方法存在兼容，IE9以上才支持 3.兄弟节点 3.1 node.nextSibling 返回当前元素的下一个兄弟节点，找不到则返回null，同样，包含所有的节点 3.2 node.previousSibling 返回当前元素上一个兄弟节点，找不到则返回null, 同样，包含所有的节点 3.3 node.nextElementSibling 返回当前元素下一个兄弟元素节点，找不到则返回null 3.4 node.previousElementSibling 返回当前元素上一个兄弟节点，找不到则返回null这两个方法存在兼容，IE9以上才支持 解决兼容性：封装一个兼容性的函数","categories":[],"tags":[]},{"title":"html总结","slug":"html总结","date":"2019-12-02T08:43:05.000Z","updated":"2019-12-02T13:11:06.205Z","comments":true,"path":"2019/12/02/html总结/","link":"","permalink":"http://vivi-design.github.io/2019/12/02/html%E6%80%BB%E7%BB%93/","excerpt":"","text":"HTML总结笔记(一)一、网页的原理：&nbsp;&nbsp;&nbsp;&nbsp;用户输入某个网址之后，对应的服务器发现用户请求该网页，就会将该网页相关的所有文件（图片文件、JS文件、CSS文件、flash文件等）通过HTTP协议（hypertext transfer protocol超文本传输协议）传输到用户的电脑里面的一个临时文件夹（对应浏览器有自己的临时文件夹位置）中，HTML页面在用户自己的电脑上进行渲染，此时用户即可在浏览器看到对应页面的效果,每一个网址，都对应了服务器上面的确定的文件。纯文本文件：只有内容，没有样式。常见的纯文本文件有：.txt.html.js.css.java。更深层次可以理解为没有语义，内部所有文字不存在任何代码语义。 二、HTMLHTML：hypertext markup language超文本标记语言。就是通过标签对，给纯文本增加语义。即用文本给文本增加语义，就叫做“超文本”，而存在标签对，所以就是“超文本标记语言”，html中除了语义其他什么都没有。 三、sublimetips： 做网页和用什么软件没有任何关系，sublime非常快、方便、小巧、插件多。所以我们选择使用这个编辑器sublime中常用快捷键： ctrl+n：新建文件 ctrl+滚轮：调整字号 ctrl+shift+↑：上移当前行 ctrl+shift+d：复制当前行 ctrl+shift+k：删除当前行 四、HTML文档基本骨架1&lt;!DOCTYPE html PUBLIC&quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD XHTML 1.0 Transitional&#x2F;&#x2F;EN&quot;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;xhtml1&#x2F;DTD&#x2F;xhtml1-transitional.dtd&quot;&gt;2&lt;htmlxmlns&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;xhtml&quot; xml:lang&#x3D;&quot;en&quot;&gt;3&lt;head&gt;4&lt;meta http-equiv&#x3D;&quot;Content-Type&quot;content&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot;&gt; 5&lt;title&gt;Document&lt;&#x2F;title&gt;6&lt;&#x2F;head&gt;7&lt;body&gt;8&lt;&#x2F;body&gt;9&lt;&#x2F;html&gt; 4.1 文档声明头 DocType Declaration：用于声明该文档使用何种规范(HTML/XHTML) HTML4.01里面有两大种规范，每大种规范里面又各有3种小规范。所以一共6种规范. sublime输入的html:xt x表示XHTML，t表示transitional HTML5中极大的简化了DTD，也就是说HTML5中就没有XHTML了（W3C自己打脸了）： 4.2 字符集字符集用meta标签定义，meta表示“元”。“元”配置，就是表示基本的配置项目。 charset就是charactor set“字符集”的意思。中文能够使用的字符集有两种： UTF-8和gbk,sublime默认utf-8 注意:我们用meta标签可以声明当前这个html文档的字库，但是一定要和保存的类型一样，否则乱码！ 当我们不设置的时候，sublime默认类型就是UTF-8。而一旦更改为gb2312的时候，就一定要记得设置一下sublime的保存类型：文件→ set File Encoding to →Chinese Simplified(GBK) UTF-8里面存储一个汉字3个字节。而gb2312中存储一个汉字2个字节。 UTF-8 字多，有各种国家的语言，但是保存尺寸大，文件臃肿； gb2312字少，只用中文和少数外语和符号，但是尺寸小，文件小巧。 浏览器就是通过meta来看你是什么字符集的，比如你保存的时候meta写的，和声明的不匹配，那么浏览器就是乱码。 4.3 关键字和页面描述 只要设置的Description页面面熟，那么百度搜索结果，就能够显示这些语句，这个技术叫做SEO，search engine optimization，搜索引擎优化。 这些关键词，就是告诉搜索引擎，这个网页是干嘛的，能够提高搜索命中率。让别人能够找到你，搜索到你。Keywords就是“关键词”的意思。 4.4 title标签网页的标题 title也是有助于SEO搜索引擎优化的： 五、HTML的基本语法特性5.1 html对换行不敏感，对tab不敏感HTML不是依靠缩进来表示嵌套的，就是看标签的包裹关系。但是，我们发现有良好的缩进，代码更易读。要求大家都正确缩进标签。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-12-02T07:04:33.524Z","updated":"2019-12-02T07:04:33.524Z","comments":true,"path":"2019/12/02/hello-world/","link":"","permalink":"http://vivi-design.github.io/2019/12/02/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}